#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_H 12
#define MAX_C1 50
#define MAX_C2 200
#define RANGO_MAX 100
#define RANGO_MIN 0
#define SG_ESPERA_S 1
#define SG_ESPERA_L 2




struct Herramienta {
		char num_serie[MAX_C1];
		int nivel_desgaste;
		char descripcion[MAX_C2];
	};



int main(void) {

	struct Herramienta herramientas[MAX_H]={0};


	//Leer herramientas

	FILE *f1 = fopen("C:\\Users\\jorg_\\Desktop\\herramientas.sav", "r");

	if (f1 == NULL){
		perror("Error de apertura de fichero");
		return -1;
	}

	char cadena1[MAX_C1];
	char cadena2[MAX_C2];
	int valor, cont, n, boolean;

	/////////////////////////
	for(int j=0;j<MAX_C1;j++){
		cadena1[j] = '\0';
	}
	for(int j=0;j<MAX_C2;j++){
		cadena2[j] = '\0';
	}

	///////////////////////////

	cont=0;
	n=0;
	while(fscanf (f1, "%[a-z0-9];%d;%[a-z0-9]\n", cadena1, &valor, cadena2) != NULL){
		if (cont != 0){

			for(int w=0;w<MAX_C1;w++){
				if(cadena1[w] == herramientas[cont-1].num_serie[w])
					n++;
			}
			if(n == MAX_C1){
				n=0;
				break;
			}
			n=0;

		}
		strcpy(herramientas[cont].num_serie, cadena1);
		herramientas[cont].nivel_desgaste = valor;
		strcpy(herramientas[cont].descripcion, cadena2);

		if(valor>RANGO_MAX || valor<RANGO_MIN){
			printf("\n\t----------------------------------------------");
			printf("\n\t| ERROR EN LOS VALORES DE \"herramientas.txt\" |");
			printf("\n\t----------------------------------------------\n\n");
			sleep(SG_ESPERA_L);
			return 0;
		}

		//Notificacion herramienta gastada//
		if (valor==RANGO_MIN){
			printf("\n\t---------------------------------");
			printf("\n\t| EXISTEN HERRAMIENTAS GASTADAS |");
			printf("\n\t---------------------------------\n\n");
			sleep(SG_ESPERA_L);
}
		////////////////////////////////////
		cont++;
		for(int j=0;j<MAX_C1;j++){
			cadena1[j] = '\0';
		}
		for(int j=0;j<MAX_C2;j++){
			cadena2[j] = '\0';
		}
	}

	fclose(f1);


/////////////////////////////////////////////////////////////////


    int opcion;

    do
    {
        printf( "\n   1. Mostrar listado.");
        printf( "\n   2. Anadir herramienta.");
        printf( "\n   3. Eliminar herramienta.");
        printf( "\n   4. Modificar herramienta.");
        printf( "\n   5. Mostrar herramientas por debajo de un nivel de desgaste.");
        printf( "\n   6. Guardar y Salir.");
printf( "\n\n   Introduzca opcion (1-6): ");

        scanf( "%d", &opcion );

        /* Inicio del anidamiento */
        switch (opcion){

            case 1:  //FUNCIONA
            	printf( "\n   Listado de las herramientas (numero de serie, nivel desgaste, descripcion): \n" );
            	printf( "------------------------------------------------------------------------------------\n" );


            	//listar herramientas
            	for (int i=0; i<MAX_H; i++){
            		for(int j=0; j<MAX_C1;j++){
            			if(herramientas[i].num_serie[j] == '\0')
            				n++;
            		}

            		if (n == MAX_C1){
            			n=0;
            			continue;
            		}
            		n=0;

            		printf("\t%s, %d, %s\n",herramientas[i].num_serie,herramientas[i].nivel_desgaste,herramientas[i].descripcion);
            	}
            	printf("\n");
            	break;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



            case 2: //FUNCIONA

            	for(int j=0;j<MAX_C1;j++){
            		cadena1[j] = '\0';
            	}
            	valor=0;
            	for(int j=0;j<MAX_C2;j++){
            		cadena2[j] = '\0';
            	}

            	n=0;
            	boolean=0;

            	printf( "\n   Introduzca el numero de serie de la herramienta que desea anadir: ");
                scanf( "%s", cadena1 );


                for (int i=0; i<MAX_H; i++){
                	for(int w=0;w<MAX_C1;w++){
                		if(cadena1[w] == herramientas[i].num_serie[w])
                			n++;
                	}
                	if(n==MAX_C1){
                		boolean=1;
                		break;
                	}
                	n=0;
                }
                if(boolean){
                	printf( "\n\t  El numero de serie introducido ya existe\n");
                	printf("\t------------------------------------------------\n\n");
                	sleep(SG_ESPERA_S);
                	break;

                }



                printf( "\n   Introduzca el nivel de desgaste de la herramienta, nueva(100)---gastada(0): ");
                scanf( "%d", &valor );

        		while(valor>RANGO_MAX || valor<RANGO_MIN){
        			printf("\n\tValor incorrecto\n");
        			sleep(SG_ESPERA_S);
                    printf( "\n   Introduzca el nivel de desgaste de la herramienta, nueva(100)---gastada(0): ");
        			scanf( "%d", &valor );
        		}
                printf( "\n   Introduzca una descripcion de la herramienta: ");
                scanf( "%s", cadena2);

                strcpy(herramientas[cont].num_serie, cadena1);
                herramientas[cont].nivel_desgaste = valor;
                strcpy(herramientas[cont].descripcion, cadena2);
                cont++;

            	printf( "\n\t  Herramienta anadida correctamente \n ");
            	printf("\t----------------------------------------");
            	sleep(SG_ESPERA_S);
            	printf("\n");

                //No se comprueba que haya herramientas repetidas

                break;




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






            case 3:

            	for(int j=0;j<MAX_C1;j++){
            			cadena1[j] = '\0';
            	}

            	printf( "\n   Introduzca el numero de serie de la herramienta que desea eliminar: ");
                scanf( "%s", cadena1 );

            	//strcpy(herramientas[0].num_serie, cadena1);

            	boolean=1;

                for (int i=0; i<MAX_H; i++){
                	for(int w=0;w<MAX_C1;w++){
                		if(cadena1[w] == herramientas[i].num_serie[w])
                			n++;
                	}
                	if(n == MAX_C1){
                		boolean=0;
                		n=0;
                		for(int j=0;j<MAX_C1;j++){
                			herramientas[i].num_serie[j] = '\0';
                		}
                		herramientas[i].nivel_desgaste = 0;

                		for(int j=0;j<MAX_C2;j++){
                			herramientas[i].descripcion[j] = '\0';
                		}
                		break;
                	}
                	n=0;
                }
                if(boolean){
                	printf( "\n  No se ha encontrado ninguna herramienta con ese numero de serie\n");
                	printf("  --------------------------------------------------------------------\n\n");
                	sleep(SG_ESPERA_S);
                	break;
                }else{

                	printf( "\n\t  Herramienta eliminada correctamente \n ");
                	printf("\t----------------------------------------------");
                	sleep(SG_ESPERA_S);
                	printf("\n");
                	break;
                }








////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



            case 4:

            	for(int j=0;j<MAX_C1;j++){
            		cadena1[j] = '\0';
            	}
            	valor=0;
            	for(int j=0;j<MAX_C2;j++){
            		cadena2[j] = '\0';
            	}

            	printf( "\n   Introduzca el numero de serie de la herramienta a modificar: ");
                scanf( "%s", cadena1 );

                //Busca herramienta

            	//strcpy(cadena1, "00001");


                boolean=1;
                for (int i=0; i<MAX_H; i++){
                	for(int w=0;w<MAX_C1;w++){
                		if(cadena1[w] == herramientas[i].num_serie[w])
                			n++;
                	}
                	if(n == MAX_C1){
                		boolean=0;
                		n=0;


                		printf( "\n   Introduzca el nivel de desgaste de la herramienta, nueva(100)---gastada(0): ");
                		scanf( "%d", &valor );

                		while(valor>RANGO_MAX || valor<RANGO_MIN){
                			printf("\n\tValor incorrecto\n");
                			printf( "\n   Introduzca el nivel de desgaste de la herramienta, nueva(100)---gastada(0): ");
                			scanf( "%d", &valor );
                		}

                		herramientas[i].nivel_desgaste = valor;

                		printf( "\n   Introduzca la nueva descripcion: " );
                		scanf( "%s", cadena2 );
                		strcpy(herramientas[i].descripcion, cadena2);


                		boolean=0;
                		printf("\n\n\tHerramienta actualizada\n");
                		printf("------------------------------------------------\n\n");
                		sleep(SG_ESPERA_S);

                		break;


                	}
                    n=0;
                }
                if(boolean){
                	printf( "\n  No se ha encontrado ninguna herramienta con ese numero de serie\n");
                	printf("  --------------------------------------------------------------------\n\n");
                	sleep(SG_ESPERA_S);
                }
                //sale automaticamente

                break;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            case 5: //
            	valor=0;
                printf( "\n   Introduzca el nivel de desgaste limite, nueva(100)---gastada(0): ");
                scanf( "%d", &valor );

                while(valor>RANGO_MAX || valor<RANGO_MIN){
                	printf("\n\tValor incorrecto\n");
                	sleep(SG_ESPERA_S);
                    printf( "\n   Introduzca el nivel de desgaste limite, nueva(100)---gastada(0): ");
                	scanf( "%d", &valor );
                }



                //Buscar herramientas por debajo del numero

                printf( "\n   Listado de las herramientas con menor nivel de desgaste de %d (numero de serie, nivel desgaste, descripcion): \n", valor );
                printf( "------------------------------------------------------------------------------------------------------------------\n" );


                for (int i=0; i<MAX_H; i++){
                	for(int j=0; j<MAX_C1;j++){
                		if(herramientas[i].num_serie[j] == '\0')
                			n++;
                	}

                	if (n == MAX_C1){
                		n=0;
                		continue;
                	}
                	n=0;
                	if (herramientas[i].nivel_desgaste <= valor){
                		printf("\t%s, %d, %s\n",herramientas[i].num_serie,herramientas[i].nivel_desgaste,herramientas[i].descripcion);
                	}
                }
                printf("\n");
                break;


                for(int i=0;i<MAX_H;i++){
                	for(int j=0;j<MAX_C1;j++){
                		if(herramientas[i].num_serie[j] == '\0')
                			n++;
                	}
                	if(n==MAX_C1){
                		break;
                	}
                	if (herramientas[i].nivel_desgaste <= valor){
                		printf("\t%s, %d, %s\n",herramientas[i].num_serie,herramientas[i].nivel_desgaste,herramientas[i].descripcion);
                	}
                	n=0;
                }
                break;
        }

         /* Fin del anidamiento */

    } while ( opcion != 6 );

	FILE *f2 = fopen("C:\\Users\\jorg_\\Desktop\\herramientas.sav", "w");

	char str[100];
	for(int i=0; i<MAX_H;i++){
		for(int w=0;w<MAX_C1;w++){
			if(herramientas[i].num_serie[w] != '\0')
				n++;
		}
		if(n < MAX_C1 && n>0){
			fputs(herramientas[i].num_serie,f2);
			fputs(";", f2);

			sprintf(str, "%d", herramientas[i].nivel_desgaste);
			fputs(str, f2);

			fputs(";", f2);
			fputs(herramientas[i].descripcion,f2);
			fputs("\n", f2);
		}
		n=0;
	}

	fclose(f2);
    return 0;

}

